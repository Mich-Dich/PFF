todo_list:
  m_topics:
  - name: Engine
    selected: false
    tasks:
    - title: add [stop_watch] as functionallity to utils
      description: [stop_watch] should suport the following functions:$- start/stop$- measure duration of a scope$- present result in diffrent formats (s/ms/ns/min)
      done: false
    - title: Implement Binary Serializer with the Same API as YAML Serializer
      description: # Objective: Develop a binary serializer that mirrors the API and functionality of the existing YAML serializer.$$- **API Design and Compatibility**:$  - Design the binary serializer to use the same function signatures, options, and chaining method as the YAML serializer (`PFF::serializer::yaml`).$  - Ensure that the binary serializer supports the same operations, including handling of primitive data types, structs, and vectors.$$- **Binary Serialization Implementation**:$  - Implement the main class for the binary serializer in the `PFF::serializer` namespace, named `binary`.$  - Develop the `entry` method for serializing and deserializing individual data fields.$  - Implement the `vector` method to handle the serialization of vectors, ensuring compatibility with custom structs.$  $- **File Handling**:$  - Implement efficient file I/O operations for binary data.$$- **Testing and Validation**:$  - Write unit tests to validate that the binary serializer correctly handles various data types and complex structures, including nested vectors and structs.$  - Compare the serialized data to ensure consistency in functionality between the YAML and binary serializers.$  $- **Performance Optimization**:$  - Optimize the binary serializer for speed and memory usage, ensuring that it outperforms the YAML serializer in scenarios where a binary format is preferable.$  $- **Documentation**:$  - Document the binary serializer API, providing clear examples that mirror those in the YAML serializer documentation.$  - Update the GitHub Wiki with a new section for binary serialization, explaining its usage, function signatures, and any differences in behavior compared to the YAML serializer.$
      done: false
  - name: Renderer
    selected: true
    tasks:
    - title: Resolve mech normal problem
      description: Meshes are currently imported or rendered with incorect nomals and incorect depth culling
      done: false
    - title: Implement Automatic LOD Generation and Selection for Meshes
      description: # Objective: Develop a system to automatically generate 4 Levels of Detail (LODs) for meshes loaded from GLTF files and integrate LOD selection in the rendering pipeline.$$- **GLTF Mesh Loading Enhancements**:$  - Extend the existing GLTF loader to support the automatic generation of LODs for each mesh.$  - Use a mesh simplification algorithm (e.g., edge collapse, vertex clustering) to create 4 LODs of decreasing detail.$  - Store the generated LODs alongside the original mesh data for use during rendering.$$- **LOD Selection Logic**:$  - Implement a system within the `draw:geometry()` function to select the appropriate LOD based on camera distance, screen size, or other performance metrics.$  - Ensure the LOD selection is efficient, minimizing overhead during the render loop.$$- **Integration and Testing**:$  - Integrate the LOD generation and selection into the core engine's rendering pipeline.$  - Perform tests with various GLTF models to ensure LODs are generated correctly and selected appropriately during rendering.$  - Optimize the LOD transition to avoid noticeable pop-ins or artifacts during gameplay.$  $- **Documentation**:$  - Document the LOD generation process and selection criteria in the projectâ€™s codebase for future reference and further development.$  - Include examples of how to utilize the LOD system within the game engine.
      done: false
  - name: Texture Generator
    selected: false
    tasks:
    - title: add Texture-Generator as new [Tool] to tool-bar. 
      description: 
      done: false
  - name: ToDo-List
    selected: false
    tasks:
    - title: Use [Enter] as input confirmation
      description: 
      done: false
    - title: Move [new Task Box] to top of list
      description: 
      done: true
    - title: make Task editable
      description: 
      done: false
